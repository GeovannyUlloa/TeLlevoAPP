node --version

npm --version

npm install -g @ionic/cli

npm install -g npm@10.9.0

npm install -g @angular/cli


### **1. Instalar Ionic y Angular CLI (si no lo tienes instalado)**
Primero, instala las herramientas globales para trabajar con Ionic y Angular:

```bash
npm install -g @ionic/cli @angular/cli
```

---

### **2. Crear un proyecto con Ionic Angular**
Si no tienes un proyecto creado, puedes iniciarlo con:

```bash
ionic start myApp blank --type=angular
cd myApp
```

---

### **3. Instalar Firebase y AngularFire**
Instala las dependencias necesarias para usar Firebase y AngularFire en tu proyecto.

```bash
npm install firebase @angular/fire
```

---

### **4. Instalar RxJS (si aún no está instalado)**  
RxJS viene integrado con Angular, pero si necesitas una versión específica o un proyecto personalizado:

```bash
npm install rxjs
```

---

### **5. Opcionales según las necesidades del proyecto**

#### a) **Autenticación con Firebase**  
Si planeas usar Firebase Authentication, ya está incluida con el paquete `firebase`. Solo necesitas configurarla.

#### b) **Firestore (Base de datos en tiempo real o documentos)**  
Ya viene con `@angular/fire`. Para asegurarte de que funcione:

```bash
npm install firebase @angular/fire
```

#### c) **Cloud Storage para Firebase**
Si necesitas manejar imágenes u otros archivos en tu proyecto, también se incluye con `firebase`. Solo necesitas habilitarlo en la consola de Firebase.

#### d) **Firebase Hosting**
Para hospedar tu aplicación en Firebase Hosting, instala la herramienta de línea de comandos de Firebase:

```bash
npm install -g firebase-tools
```

Luego, inicia sesión en Firebase y configura el hosting:
```bash
firebase login
firebase init hosting
```

---

### **6. Capacitor (si planeas usar funcionalidades nativas)**
Si tu proyecto necesita integrarse con Capacitor para acceso a características nativas, instala y configura Capacitor:

```bash
npm install @capacitor/core @capacitor/cli
npx cap init
```

Añade la plataforma de tu preferencia (Android o iOS):
```bash
npx cap add android
npx cap add ios
```

Sincroniza Capacitor con tu proyecto Ionic:
```bash
npx cap sync
```

---

### **7. Instalación de dependencias adicionales útiles**

#### a) **Ionic Storage (para almacenamiento local)**
Si necesitas guardar datos localmente:

```bash
npm install @ionic/storage-angular
```

#### b) **HttpClientModule (para solicitudes HTTP)**
Por lo general, ya está incluido en Angular. Solo necesitas importarlo en tu módulo.

#### c) **Librerías para UI/UX**
Ionic ya tiene una gran cantidad de componentes, pero puedes añadir extras si es necesario:
```bash
npm install ionicons
```

---

### **8. Comandos para mantener las dependencias actualizadas**

#### Actualizar todas las dependencias:
```bash
npm update
```

#### Actualizar dependencias globales (Ionic y Angular CLI):
```bash
npm install -g @ionic/cli @angular/cli
```

#### Verificar vulnerabilidades y arreglarlas:
```bash
npm audit fix
```

---

### **Comando final para ejecutar tu aplicación**
Ejecuta el servidor de desarrollo de Ionic Angular con:
```bash
ionic serve
```
